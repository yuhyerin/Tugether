package com.web.curation.repo;

<<<<<<< HEAD
import java.util.List;
=======
import javax.transaction.Transactional;
>>>>>>> 2c8f18d0d1eb0b06aeec462d0682ae38253d61ad

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.web.curation.dto.tag.Tag;

@Repository
public interface TagRepo extends JpaRepository<Tag, String>{
	
	@Query(value="select tag_name from tag t where t.tag_id=:tag_id", nativeQuery = true)
	public String findTagNameByTagId(int tag_id);
	
//<<<<<<< HEAD
	//키워드를 포함한 모든 태그이름 찾기
	@Query(value="select tag_name from tag t where t.tag_name like CONCAT('%',:keyword,'%')", nativeQuery=true)
	public List<String> findTagNameByTagName(String keyword);
//=======
	@Query(value="select tag_id from tag t where t.tag_name = :tag_name",nativeQuery = true )
	public int findTagIdByTagName(String tag_name);

	@Query(value="insert into tag(tag_name, fav_cnt) values(:tagname , :fav_cnt )",nativeQuery = true)
	public void addTag(String tagname, int fav_cnt);

	@Modifying(clearAutomatically = true)
	@Transactional
	@Query(value="update tag t set t.fav_cnt = t.fav_cnt + 1 where t.tag_id = :tag_id",nativeQuery = true)
	public void updateFav_cnt(@Param("tag_id")int tag_id);

>>>>>>> 2c8f18d0d1eb0b06aeec462d0682ae38253d61ad
	
	//키워드를 포함한 태그아이디찾기
	@Query(value="select tag_id from tag t where t.tag_name like CONCAT('%',:keyword,'%')", nativeQuery=true)
	List<Integer> findTagIdByTagName(String keyword);
}
